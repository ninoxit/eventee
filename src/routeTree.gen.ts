/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as SignupIndexImport } from './routes/signup/index'
import { Route as SignoutIndexImport } from './routes/signout/index'
import { Route as PIndexImport } from './routes/p/index'
import { Route as NosotrosIndexImport } from './routes/nosotros/index'
import { Route as LoginIndexImport } from './routes/login/index'
import { Route as EventosIndexImport } from './routes/eventos/index'
import { Route as DebugIndexImport } from './routes/debug/index'
import { Route as PConfigImport } from './routes/p/config'
import { Route as PUserImport } from './routes/p/$user'
import { Route as PIdImport } from './routes/p/$id'
import { Route as LoginForgotImport } from './routes/login/forgot'
import { Route as EventosFiestaImport } from './routes/eventos/fiesta'
import { Route as ErrorCodnameImport } from './routes/error/$codname'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SignupIndexRoute = SignupIndexImport.update({
  path: '/signup/',
  getParentRoute: () => rootRoute,
} as any)

const SignoutIndexRoute = SignoutIndexImport.update({
  path: '/signout/',
  getParentRoute: () => rootRoute,
} as any)

const PIndexRoute = PIndexImport.update({
  path: '/p/',
  getParentRoute: () => rootRoute,
} as any)

const NosotrosIndexRoute = NosotrosIndexImport.update({
  path: '/nosotros/',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const EventosIndexRoute = EventosIndexImport.update({
  path: '/eventos/',
  getParentRoute: () => rootRoute,
} as any)

const DebugIndexRoute = DebugIndexImport.update({
  path: '/debug/',
  getParentRoute: () => rootRoute,
} as any)

const PConfigRoute = PConfigImport.update({
  path: '/p/config',
  getParentRoute: () => rootRoute,
} as any)

const PUserRoute = PUserImport.update({
  path: '/p/$user',
  getParentRoute: () => rootRoute,
} as any)

const PIdRoute = PIdImport.update({
  path: '/p/$id',
  getParentRoute: () => rootRoute,
} as any)

const LoginForgotRoute = LoginForgotImport.update({
  path: '/login/forgot',
  getParentRoute: () => rootRoute,
} as any)

const EventosFiestaRoute = EventosFiestaImport.update({
  path: '/eventos/fiesta',
  getParentRoute: () => rootRoute,
} as any)

const ErrorCodnameRoute = ErrorCodnameImport.update({
  path: '/error/$codname',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/error/$codname': {
      preLoaderRoute: typeof ErrorCodnameImport
      parentRoute: typeof rootRoute
    }
    '/eventos/fiesta': {
      preLoaderRoute: typeof EventosFiestaImport
      parentRoute: typeof rootRoute
    }
    '/login/forgot': {
      preLoaderRoute: typeof LoginForgotImport
      parentRoute: typeof rootRoute
    }
    '/p/$id': {
      preLoaderRoute: typeof PIdImport
      parentRoute: typeof rootRoute
    }
    '/p/$user': {
      preLoaderRoute: typeof PUserImport
      parentRoute: typeof rootRoute
    }
    '/p/config': {
      preLoaderRoute: typeof PConfigImport
      parentRoute: typeof rootRoute
    }
    '/debug/': {
      preLoaderRoute: typeof DebugIndexImport
      parentRoute: typeof rootRoute
    }
    '/eventos/': {
      preLoaderRoute: typeof EventosIndexImport
      parentRoute: typeof rootRoute
    }
    '/login/': {
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/nosotros/': {
      preLoaderRoute: typeof NosotrosIndexImport
      parentRoute: typeof rootRoute
    }
    '/p/': {
      preLoaderRoute: typeof PIndexImport
      parentRoute: typeof rootRoute
    }
    '/signout/': {
      preLoaderRoute: typeof SignoutIndexImport
      parentRoute: typeof rootRoute
    }
    '/signup/': {
      preLoaderRoute: typeof SignupIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  ErrorCodnameRoute,
  EventosFiestaRoute,
  LoginForgotRoute,
  PIdRoute,
  PUserRoute,
  PConfigRoute,
  DebugIndexRoute,
  EventosIndexRoute,
  LoginIndexRoute,
  NosotrosIndexRoute,
  PIndexRoute,
  SignoutIndexRoute,
  SignupIndexRoute,
])

/* prettier-ignore-end */
